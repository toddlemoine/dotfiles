# Path to your oh-my-zsh installation.
export ZSH=/Users/toddlemoine/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="lambda-mod"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git zsh-completions dotenv zsh-autosuggestions)
autoload -U compinit && compinit

# User configuration
ZSH_DOTENV_FILE=.env.development.local

export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# *****************
# Custom
# *****************
alias zshconfig="nvim ~/.zshrc"
alias vimconfig="nvim ~/.vimrc"
alias icloud="cd ~/Library/Mobile\ Documents/com~apple~CloudDocs/"
alias sleepnow="pmset sleepnow"

export EDITOR=nvim
export PATH="$HOME/bin:$HOME/.rbenv/bin:$HOME/npm/bin:$PATH"

export FZF_DEFAULT_COMMAND='ag --hidden -p ~/.gitignore -g ""'

# **********************
# Work-related vars go here
# **********************



# **********************
# Functions 
# **********************

# Get a simple webserver. Thanks, Paul Irish!
function server() {
  local port="${1:-8000}"
  open "http://localhost:${port}/"
  python -m SimpleHTTPServer "${port}"
}

# Create a new directory and enter it
function md() {
  mkdir -p "$@" && cd "$@"
}


# find shorthand
function f() {
    find . -name "$1"
}

# code () { VSCODE_CWD="$PWD" open -n -b "com.microsoft.VSCode" --args $* ;}
# eval "$(rbenv init -)"

# z
. ~/repos/z/z.sh

# git fuzzy search branch names to checkout
fbr() {
  git fetch
  local branches branch
  branches=$(git branch -a) &&
  branch=$(echo "$branches" | fzf +s +m -e) &&
  git checkout $(echo "$branch" | sed "s:.* remotes/origin/::" | sed "s:.* ::")
}

# Pretty-print a jwt. From https://www.jvt.me/posts/2019/06/13/pretty-printing-jwt-openssl/
function jwt() {
  for part in 1 2; do
    b64="$(cut -f$part -d. <<< "$1" | tr '_-' '/+')"
    len=${#b64}
    n=$((len % 4))
    if [[ 2 -eq n ]]; then
      b64="${b64}=="
    elif [[ 3 -eq n ]]; then
      b64="${b64}="
    fi
    d="$(openssl enc -base64 -d -A <<< "$b64")"
    python -mjson.tool <<< "$d"
    # don't decode further if this is an encrypted JWT (JWE)
    if [[ 1 -eq part ]] && grep '"enc":' <<< "$d" >/dev/null ; then
        exit 0
    fi
  done
}

fd() {
  preview="git diff $@ --color=always -- {-1}"
  git diff $@ --name-only | fzf -m --ansi --preview $preview
}

ts() {
  CURRENT=`switchaudiosource -c`
  if [[ $CURRENT == "MacBook Pro Speakers" ]]
  then
    switchaudiosource -s "External Headphones"
  else
    switchaudiosource -s "MacBook Pro Speakers"
  fi
}

export NVM_DIR="$HOME/.nvm"
. "/usr/local/opt/nvm/nvm.sh"


[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Minimal prompt
autoload -U promptinit; promptinit
prompt pure

